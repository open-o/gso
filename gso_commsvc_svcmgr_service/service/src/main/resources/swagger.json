{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "GSO-LCM NBI AND GS-O Driver Southbound API",
        "description": "GSO-LCM NBI is responsible to create cross domain service. Southbound Interface (SBI) drivers are responsible for translation to specific technologies such as SDN and NFV."
    },
    "basePath": "/openoapi/gso/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/services": {
            "post": {
                "summary": "Create service instance",
                "description": "It creates a service instance based on request body.",
                "operationId": "createService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createRequest",
                        "description": "Parameters needed to create service instance.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateServiceReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Request has been received, service instance is being created.",
                        "schema": {
                            "$ref": "#/definitions/CreateServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to create service instance, which is internal error."
                    }
                }
            },
            "get": {
                "summary": "query list of service instances",
                "description": "query basic information of service instances",
                "operationId": "getAllInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "query successfully",
                        "schema": {
                            "$ref": "#/definitions/GetAllServicesResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to query all service instances, which is internal error."
                    }
                }
            }
        },
        "/services/toposequence/{serviceId}": {
            "get": {
                "summary": "get topology sequence of service segment",
                "description": "show service segment by sequnece number which is defined in service template",
                "operationId": "getTopoSequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "service instace id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get successfully.",
                        "schema": {
                            "$ref": "#/definitions/SvcTopologyResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to get topology of service segments, which is internal error."
                    }
                }
            }
        },
        "/services/{serviceId}": {
            "delete": {
                "summary": "delete service instance",
                "description": "delete service instance",
                "operationId": "deleteService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "service instance id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Request has been received, service instance is being deleted.",
                        "schema": {
                            "$ref": "#/definitions/DeleteServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to delete service instace, which is internal error."
                    }
                }
            },
            "get": {
                "summary": "query detail of service instance",
                "description": "query detail of service instance",
                "operationId": "getInstanceByInstanceId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "service instance id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query successfully.",
                        "schema": {
                            "$ref": "#/definitions/GetOneServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to query detail of service instace, which is internal error."
                    }
                }
            }
        },
        "/services/{serviceId}/operations/{operationId}": {
            "get": {
                "summary": "get service operation",
                "description": "get service operation",
                "operationId": "getServiceOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "service instace id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operationId",
                        "in": "path",
                        "description": "service operation id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get successfully.",
                        "schema": {
                            "$ref": "#/definitions/GetOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to query operation of service instace, which is internal error."
                    }
                }
            }
        },
        "/nspackages": {
            "post": {
                "summary": "GSO Package onboarding",
                "description": "set status of gso package to be onboarding",
                "operationId": "onBoardingPackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "GSAR package ID which catalog provides",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/csarId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "409": {
                        "description": "Request resource conflict with other operations."
                    },
                    "500": {
                        "description": "Fail to onboarding package, which is internal error."
                    }
                }
            }
        },
        "/nspackages/{csarId}": {
            "delete": {
                "summary": "delete GSAR package",
                "description": "delete GSAR package",
                "operationId": "deleteGsarPackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "csarId",
                        "in": "path",
                        "description": "GSAR package ID which catalog provides",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "409": {
                        "description": "Request resource conflict with other operations."
                    },
                    "500": {
                        "description": "Fail to onboarding package, which is internal error."
                    }
                }
            }
        },
        "/gsodrivers/ns/create": {
            "post": {
                "summary": "Create GSO Service Segment",
                "description": "it will create a GS-O segment instance specified in the request",
                "operationId": "createGsoNs",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "nsCreatRequest",
                        "in": "body",
                        "description": "parameters needed to create gso service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create gso service segment success",
                        "schema": {
                            "$ref": "#/definitions/GsoNsCreateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to create gso service segment, which is internal error."
                    }
                }
            }
        },
        "/gsodrivers/ns/delete": {
            "post": {
                "summary": "Delete GSO Service Segment",
                "description": "it will delete a GS-O segment instance specified in the request",
                "operationId": "deleteGsoNs",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "nsDeleteRequest",
                        "in": "body",
                        "description": "parameters needed to delete gso service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete gso service segment success",
                        "schema": {
                            "$ref": "#/definitions/GsoNsDeleteRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to delete gso service segment, which is internal error."
                    }
                }
            }
        },
        "/gsodrivers/jobs/{jobId}": {
            "get": {
                "summary": "Get GSO Service Segment Operation Status",
                "description": "it will get a GS-O segment instance operation status specified in the request",
                "operationId": "queryGsoNsProgress",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "job id of the gso service segment to be queried",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query gso service segment operation status success",
                        "schema": {
                            "$ref": "#/definitions/NsQueryRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to get gso service segment, which is internal error."
                    }
                }
            }
        },
        "/nfvodrivers/ns": {
            "post": {
                "summary": "Create NFVO Service Segment",
                "description": "it will create a NFV-O segment instance specified in the request",
                "operationId": "createNfvoNs",
                "parameters": [
                    {
                        "name": "nsCreateRequest",
                        "in": "body",
                        "description": "parameters needed to create nfvo service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create nfvo service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsCreateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to create nfvo service segment, which is internal error."
                    }
                }
            }
        },
        "/nfvodrivers/{nsInstanceId}/instantiate": {
            "post": {
                "summary": "Instantiate NFVO Service Segment",
                "description": "it will instantiate a NFV-O segment instance specified in the request",
                "operationId": "instantiateNfvoNs",
                "parameters": [
                    {
                        "name": "nsInstantiateRequest",
                        "in": "body",
                        "description": "parameters needed to instantiate nfvo service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    },
                    {
                        "name": "nsInstanceId",
                        "in": "path",
                        "description": "id of segment instance",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "instantiate nfvo service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsInstantiateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to instantiate nfvo service segment, which is internal error."
                    }
                }
            }
        },
        "/nfvodrivers/ns/terminate": {
            "post": {
                "summary": "Terminate NFVO Service Segment",
                "description": "it will terminate a NFV-O segment instance specified in the request",
                "operationId": "terminateNfvoNs",
                "parameters": [
                    {
                        "name": "nsTerminateRequest",
                        "in": "body",
                        "description": "parameters needed to terminate nfvo service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "terminate nfvo service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsTerminateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to terminate nfvo service segment, which is internal error."
                    }
                }
            }
        },
        "/nfvodrivers/ns/delete": {
            "post": {
                "summary": "Delete NFVO Service Segment",
                "description": "it will delete a NFV-O segment instance specified in the request",
                "operationId": "deleteNfvoNs",
                "parameters": [
                    {
                        "name": "nsDeleteRequest",
                        "in": "body",
                        "description": "parameters needed to delete nfvo service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete nfvo service segment success"
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to delete nfvo service segment, which is internal error."
                    }
                }
            }
        },
        "/nfvodrivers/jobs/{jobId}": {
            "get": {
                "summary": "Get NFVO Service Segment Operation Status",
                "description": "it will get a NFV-O segment instance operation status specified in the request",
                "operationId": "queryNfvoNsProgress",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "job id of the nfvo service segment to be queried",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query nfvo service segment operation status success",
                        "schema": {
                            "$ref": "#/definitions/NsQueryRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to get nfvo service segment, which is internal error."
                    }
                }
            }
        },
        "/sdnodrivers/ns": {
            "post": {
                "summary": "Create SDNO Service Segment",
                "description": "it will create a SDN-O segment instance specified in the request",
				"operationId": "createSdnoNs",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "parameters needed to create sdno service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create sdno service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsCreateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to create sdno service segment, which is internal error."
                    }
                }
            }
        },
        "/sdnodrivers/{nsInstanceId}/instantiate": {
            "post": {
                "summary": "Instantiate SDNO Service Segment",
                "description": "it will instantiate a SDN-O segment instance specified in the request",
				"operationId": "instantiateSdnoNs",
                "parameters": [
                    {
                        "name": "nsInstantiateRequest",
                        "in": "body",
                        "description": "parameters needed to instantiate sdno service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    },
                    {
                        "name": "nsInstanceId",
                        "in": "path",
                        "description": "id of segment instance",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "instantiate sdno service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsInstantiateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to instantiate sdno service segment, which is internal error."
                    }
                }
            }
        },
        "/sdnodrivers/ns/terminate": {
            "post": {
                "summary": "Terminate SDNO Service Segment",
                "description": "it will terminate a SDN-O segment instance specified in the request",
				"operationId": "terminateSdnoNs",
                "parameters": [
                    {
                        "name": "nsTerminateRequest",
                        "in": "body",
                        "description": "parameters needed to terminate sdno service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "terminate sdno service segment success",
                        "schema": {
                            "$ref": "#/definitions/NsTerminateRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to terminate sdno service segment, which is internal error."
                    }
                }
            }
        },
        "/sdnodrivers/ns/delete": {
            "post": {
                "summary": "Delete SDNO Service Segment",
                "description": "it will delete a SDN-O segment instance specified in the request",
                "operationId": "deleteSdnoNs",
                "parameters": [
                    {
                        "name": "nsDeleteRequest",
                        "in": "body",
                        "description": "parameters needed to delete sdno service segment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete sdno service segment success"
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to delete sdno service segment, which is internal error."
                    }
                }
            }
        },
        "/sdnodrivers/jobs/{jobId}": {
            "get": {
                "summary": "Get SDNO Service Segment Operation Status",
                "description": "it will get a SDN-O segment instance operation status specified in the request",
                "operationId": "querySdnoNsProgress",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "job id of the sdno service segment to be queried",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query sdno service segment operation status success",
                        "schema": {
                            "$ref": "#/definitions/NsQueryRsp"
                        }
                    },
                    "400": {
                        "description": "Input parameter is wrong."
                    },
                    "500": {
                        "description": "Fail to delete sdno service segment, which is internal error."
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateServiceReq": {
            "type": "object",
            "description": "create service request",
            "properties": {
                "service": {
                    "$ref": "#/definitions/CreateServiceModel"
                }
            }
        },
        "CreateServiceModel": {
            "type": "object",
            "description": "create service request model",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "the name of service instance"
                },
                "description": {
                    "type": "string",
                    "description": "the description of service instance"
                },
                "serviceDefId": {
                    "type": "string",
                    "description": "GSAR service package ID"
                },
                "templateId": {
                    "type": "string",
                    "description": "ID of yaml file which is defined in Definitions directory"
                },
                "parameters": {
                    "$ref": "#/definitions/ServiceParamModel"
                }
            }
        },
        "CreateServiceResponse": {
            "type": "object",
            "description": "create service response",
            "properties": {
                "service": {
                    "$ref": "#/definitions/CreateResponseModel"
                }
            }
        },
        "CreateResponseModel": {
            "type": "object",
            "description": "create service response model",
            "properties": {
                "serviceId": {
                    "type": "string",
                    "description": "service instance ID"
                },
                "operationsId": {
                    "type": "string",
                    "description": "service operation ID"
                }
            }
        },
        "GetAllServicesResponse": {
            "type": "object",
            "description": "get all services response",
            "properties": {
                "services": {
                    "type": "array",
                    "description": "service instance structure",
                    "items": {
                        "$ref": "#/definitions/BaseServiceInfo"
                    }
                }
            }
        },
        "BaseServiceInfo": {
            "type": "object",
            "description": "service instance basic information",
            "properties": {
                "serviceId": {
                    "type": "string",
                    "description": "service instance ID"
                },
                "name": {
                    "type": "string",
                    "description": "the name of service instance"
                },
                "description": {
                    "type": "string",
                    "description": "the description of service instance"
                },
                "activeStatus": {
                    "type": "string",
                    "description": "service instance active status"
                },
                "status": {
                    "type": "string",
                    "description": "service operation status"
                },
                "creator": {
                    "type": "string",
                    "description": "who creates service instance"
                },
                "createAt": {
                    "type": "string",
                    "description": "time that service instance is created"
                },
                "serviceDefId": {
                    "type": "string",
                    "description": "GSAR package ID"
                },
                "templateId": {
                    "type": "string",
                    "description": "service template ID"
                }
            }
        },
        "GetOneServiceResponse": {
            "type": "object",
            "description": "response that query detail of a service instace",
            "properties": {
                "service": {
                    "$ref": "#/definitions/ServiceDetail"
                }
            }
        },
        "ServiceDetail": {
            "type": "object",
            "description": "service instance structure",
            "properties": {
                "serviceId": {
                    "type": "string",
                    "description": "service instance ID"
                },
                "name": {
                    "type": "string",
                    "description": "the name of service instance"
                },
                "description": {
                    "type": "string",
                    "description": "the description of service instance"
                },
                "activeStatus": {
                    "type": "string",
                    "description": "service instance active status"
                },
                "status": {
                    "type": "string",
                    "description": "service operation status"
                },
                "creator": {
                    "type": "string",
                    "description": "who creates service instance"
                },
                "createAt": {
                    "type": "string",
                    "description": "time that service instance is created"
                },
                "serviceDefId": {
                    "type": "string",
                    "description": "GSAR package ID"
                },
                "templateId": {
                    "type": "string",
                    "description": "service template ID"
                },
                "parameters": {
                    "$ref": "#/definitions/ServiceParamModel"
                }
            }
        },
        "ServiceParamModel": {
            "type": "object",
            "description": "parameters of node",
            "properties": {
                "domainHost": {
                    "type": "string",
                    "description": "IP and port which is used to access or manage current service object"
                },
                "nodeTemplateName": {
                    "type": "string",
                    "description": "Node name defined in node template"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Node type"
                },
                "segments": {
                    "type": "array",
                    "description": "This field manages parameters of sub-service or service segment",
                    "items": {
                        "$ref": "#/definitions/ServiceParamModel"
                    }
                },
                "nsParameters": {
                    "type": "object",
                    "description": "This model uses definitions of NSLCM API which is Instantiate Network Service. Excepet there is no nsInstanceId, other properties is the same as NSLCM API. So here just list additionalParamForNs property, refer to openo SDNO/NFVO NSLCM API to write others properties.",
                    "properties": {
                        "additionalParamForNs": {
                            "type": "object",
                            "description": "NS-level parameters for current node, now all of openo GSO parameters are written here.",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "SvcTopologyResponse": {
            "type": "object",
            "description": "response of querying service topology sequence",
            "properties": {
                "service": {
                    "$ref": "#/definitions/ServiceTopology"
                }
            }
        },
        "ServiceTopology": {
            "type": "object",
            "description": "service topology information",
            "required": [
                "serviceId",
                "segments"
            ],
            "properties": {
                "serviceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "service instance ID"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSegment"
                    },
                    "description": "service segments of service instance"
                }
            }
        },
        "ServiceSegment": {
            "type": "object",
            "description": "service segment",
            "required": [
                "serviceSegmentId",
                "serviceSegmentType",
                "topoSeqNumber",
                "domainHost"
            ],
            "properties": {
                "serviceSegmentId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "service segment ID"
                },
                "serviceSegmentType": {
                    "type": "string",
                    "description": "service node type of service segment"
                },
                "topoSeqNumber": {
                    "type": "string",
                    "description": "number that service segment represent in topology."
                },
                "domainHost": {
                    "type": "string",
                    "description": "IP and port of service which manages service segment."
                }
            }
        },
        "GetOperationResponse": {
            "type": "object",
            "description": "Response that query service operation result",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/OperationModel"
                }
            }
        },
        "OperationModel": {
            "type": "object",
            "description": "service segment",
            "properties": {
                "operationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "service operation ID"
                },
                "operation": {
                    "type": "string",
                    "description": "operation type"
                },
                "result": {
                    "type": "string",
                    "description": "operation result."
                },
                "reason": {
                    "type": "string",
                    "description": "operation fail reason."
                },
                "userId": {
                    "type": "string",
                    "description": "operation user ID."
                },
                "operationContent": {
                    "type": "string",
                    "description": "operation content."
                },
                "progress": {
                    "type": "string",
                    "description": "operation progress."
                },
                "operateAt": {
                    "type": "string",
                    "description": "operation start time."
                },
                "finishedAt": {
                    "type": "string",
                    "description": "operation finish time."
                }
            }
        },
        "csarId": {
            "type": "string",
            "description": "GSAR package id that catalog provides."
        },
        "DeleteServiceResponse": {
            "type": "string",
            "description": "delete service instance response",
            "properties": {
                "operationId": {
                    "type": "string",
                    "description": "delete operation ID."
                }
            }
        },
        "NsReq": {
            "type": "object",
            "description": "service segment request structure",
            "required": [
                "nodeTemplateName",
                "segments"
            ],
            "properties": {
                "nodeTemplateName": {
                    "type": "string",
                    "description": "name of the node template"
                },
                "segments": {
                    "type": "string",
                    "description": "parameters needed to create service segment"
                }
            }
        },
        "NsCreateRsp": {
            "type": "object",
            "description": "service segment response structure for create",
            "required": [
                "nsInstanceId"
            ],
            "properties": {
                "nsInstanceId": {
                    "type": "string",
                    "description": "service segment instance id"
                }
            }
        },
        "GsoNsCreateRsp": {
            "type": "object",
            "description": "service segment response structure for create gso ns",
            "properties": {
                "service": {
                    "type": "object",
                    "required": [
                        "serviceId",
                        "operationId"
                    ],
                    "properties": {
                        "serviceId": {
                            "type": "string",
                            "description": "service segment instance id"
                        },
                        "operationId": {
                            "type": "string",
                            "description": "service segment instance operation id"
                        }
                    }
                }
            }
        },
        "GsoNsDeleteRsp": {
            "type": "object",
            "description": "service segment response structure for delete gso ns",
            "required": [
                "operationId"
            ],
            "properties": {
                "operationId": {
                    "type": "string",
                    "description": "service segment instance operation id"
                }
            }
        },
        "NsInstantiateRsp": {
            "type": "object",
            "description": "service segment response structure for instantiate",
            "required": [
                "jobId"
            ],
            "properties": {
                "jobId": {
                    "type": "string",
                    "description": "service segment job id for instantiate"
                }
            }
        },
        "NsTerminateRsp": {
            "type": "object",
            "description": "service segment response structure for instantiate",
            "required": [
                "jobId"
            ],
            "properties": {
                "jobId": {
                    "type": "string",
                    "description": "service segment job id for instantiate"
                }
            }
        },
        "NsQueryRsp": {
            "type": "object",
            "description": "service segment job status structure",
            "required": [
                "jobId",
                "responseDescriptor"
            ],
            "properties": {
                "jobId": {
                    "type": "string",
                    "description": "job id"
                },
                "responseDescriptor": {
                    "$ref": "#/definitions/ResponseDescriptor"
                }
            }
        },
        "ResponseDescriptor": {
            "type": "object",
            "description": "service segment job status response desc",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "status of the job"
                },
                "statusDescription": {
                    "type": "string",
                    "description": "description of the job status"
                },
                "progress": {
                    "type": "string",
                    "description": "progress of the job"
                },
                "errorCode": {
                    "type": "string",
                    "description": "status of the job"
                },
                "responseId": {
                    "type": "string",
                    "description": "id of the response"
                }
            }
        }
    }
}